var A=Object.defineProperty;var D=(t,e,i)=>e in t?A(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i;var a=(t,e,i)=>D(t,typeof e!="symbol"?e+"":e,i);import{r as u}from"./index-DmM0KDA7.js";const K=[{note:"C1",url:"https://liamp.uk/res/minikeys/f24.ogg",velocity:"forte"},{note:"G1",url:"https://liamp.uk/res/minikeys/f31.ogg",velocity:"forte"},{note:"D2",url:"https://liamp.uk/res/minikeys/f38.ogg",velocity:"forte"},{note:"A2",url:"https://liamp.uk/res/minikeys/f45.ogg",velocity:"forte"},{note:"E3",url:"https://liamp.uk/res/minikeys/f52.ogg",velocity:"forte"},{note:"B3",url:"https://liamp.uk/res/minikeys/f59.ogg",velocity:"forte"},{note:"F#4",url:"https://liamp.uk/res/minikeys/f66.ogg",velocity:"forte"},{note:"C#5",url:"https://liamp.uk/res/minikeys/f73.ogg",velocity:"forte"},{note:"G#5",url:"https://liamp.uk/res/minikeys/f80.ogg",velocity:"forte"},{note:"D#6",url:"https://liamp.uk/res/minikeys/f87.ogg",velocity:"forte"},{note:"A#6",url:"https://liamp.uk/res/minikeys/f94.ogg",velocity:"forte"},{note:"F7",url:"https://liamp.uk/res/minikeys/f101.ogg",velocity:"forte"},{note:"C1",url:"https://liamp.uk/res/minikeys/p24.ogg",velocity:"piano"},{note:"G1",url:"https://liamp.uk/res/minikeys/p31.ogg",velocity:"piano"},{note:"D2",url:"https://liamp.uk/res/minikeys/p38.ogg",velocity:"piano"},{note:"A2",url:"https://liamp.uk/res/minikeys/p45.ogg",velocity:"piano"},{note:"E3",url:"https://liamp.uk/res/minikeys/p52.ogg",velocity:"piano"},{note:"B3",url:"https://liamp.uk/res/minikeys/p59.ogg",velocity:"piano"},{note:"F#4",url:"https://liamp.uk/res/minikeys/p66.ogg",velocity:"piano"},{note:"C#5",url:"https://liamp.uk/res/minikeys/p73.ogg",velocity:"piano"},{note:"G#5",url:"https://liamp.uk/res/minikeys/p80.ogg",velocity:"piano"},{note:"D#6",url:"https://liamp.uk/res/minikeys/p87.ogg",velocity:"piano"},{note:"A#6",url:"https://liamp.uk/res/minikeys/p94.ogg",velocity:"piano"},{note:"F7",url:"https://liamp.uk/res/minikeys/p101.ogg",velocity:"piano"}];var p={"C-1":0,"C#-1":1,"D-1":2,"D#-1":3,"E-1":4,"F-1":5,"F#-1":6,"G-1":7,"G#-1":8,"A-1":9,"A#-1":10,"B-1":11,C0:12,"C#0":13,D0:14,"D#0":15,E0:16,F0:17,"F#0":18,G0:19,"G#0":20,A0:21,"A#0":22,B0:23,C1:24,"C#1":25,D1:26,"D#1":27,E1:28,F1:29,"F#1":30,G1:31,"G#1":32,A1:33,"A#1":34,B1:35,C2:36,"C#2":37,D2:38,"D#2":39,E2:40,F2:41,"F#2":42,G2:43,"G#2":44,A2:45,"A#2":46,B2:47,C3:48,"C#3":49,D3:50,"D#3":51,E3:52,F3:53,"F#3":54,G3:55,"G#3":56,A3:57,"A#3":58,B3:59,C4:60,"C#4":61,D4:62,"D#4":63,E4:64,F4:65,"F#4":66,G4:67,"G#4":68,A4:69,"A#4":70,B4:71,C5:72,"C#5":73,D5:74,"D#5":75,E5:76,F5:77,"F#5":78,G5:79,"G#5":80,A5:81,"A#5":82,B5:83,C6:84,"C#6":85,D6:86,"D#6":87,E6:88,F6:89,"F#6":90,G6:91,"G#6":92,A6:93,"A#6":94,B6:95,C7:96,"C#7":97,D7:98,"D#7":99,E7:100,F7:101,"F#7":102,G7:103,"G#7":104,A7:105,"A#7":106,B7:107,C8:108,"C#8":109,D8:110,"D#8":111,E8:112,F8:113,"F#8":114,G8:115,"G#8":116,A8:117,"A#8":118,B8:119,C9:120,"C#9":121,D9:122,"D#9":123,E9:124,F9:125,"F#9":126,G9:127},f=Object.fromEntries(Object.entries(p).map(([t,e])=>[e,t])),v=[null,"A#0",null,"C#1","D#1",null,"F#1","G#1","A#1",null,"C#2","D#2",null,"F#2","G#2","A#2",null,"C#3","D#3",null,"F#3","G#3","A#3",null,"C#4","D#4",null,"F#4","G#4","A#4",null,"C#5","D#5",null,"F#5","G#5","A#5",null,"C#6","D#6",null,"F#6","G#6","A#6",null,"C#7","D#7",null,"F#7","G#7","A#7",null,null,null],M=["A0","B0","C1","D1","E1","F1","G1","A1","B1","C2","D2","E2","F2","G2","A2","B2","C3","D3","E3","F3","G3","A3","B3","C4","D4","E4","F4","G4","A4","B4","C5","D5","E5","F5","G5","A5","B5","C6","D6","E6","F6","G6","A6","B6","C7","D7","E7","F7","G7","A7","B7","C8"],m=[["Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Digit9","Digit0","Minus","Equal"],["KeyQ","KeyW","KeyE","KeyR","KeyT","KeyY","KeyU","KeyI","KeyO","KeyP","BracketLeft","BracketRight"],["KeyA","KeyS","KeyD","KeyF","KeyG","KeyH","KeyJ","KeyK","KeyL","Semicolon","Quote"],["KeyZ","KeyX","KeyC","KeyV","KeyB","KeyN","KeyM","Comma","Period","Slash"]],F=(t,e,i,o)=>{let r;if(o&&o<64&&e.size>0)r=e;else if(t.size>0)r=t;else throw new Error("No notes loaded");let s=Array.from(r.keys()).reduce((n,l)=>Math.abs(l-i)<Math.abs(n-i)?l:n);return{closestNoteMidi:s,closestNote:r.get(s)}},G=class{constructor(){a(this,"audioContext");a(this,"compressorNode");a(this,"forteNotes",new Map);a(this,"pianoNotes",new Map);a(this,"sustain",!1);a(this,"playingNotes",new Map);a(this,"progress",0);a(this,"setSustain",t=>{this.sustain=t,t?this.playingNotes.forEach(e=>{let i=this.audioContext.currentTime;e.gain.cancelScheduledValues(i),e.gain.setValueAtTime(e.gain.value,i)}):this.playingNotes.forEach(e=>{let i=this.audioContext.currentTime;e.gain.cancelScheduledValues(i),e.gain.setValueAtTime(e.gain.value,i),e.gain.linearRampToValueAtTime(.001,i+.5)})});a(this,"loadNotes",async(t,e)=>{this.forteNotes.clear(),this.pianoNotes.clear();let i=t.map(async o=>{let r=await(await fetch(o.url)).arrayBuffer(),s=await this.audioContext.decodeAudioData(r);if(o.velocity==="piano"?this.pianoNotes.set(p[o.note],s):this.forteNotes.set(p[o.note],s),e){let n=(this.pianoNotes.size+this.forteNotes.size)/t.length;n>this.progress&&(this.progress=n,e(this.progress))}});return await Promise.all(i)});a(this,"playNoteFromMidi",(t,e)=>{if(t<0||t>127)throw new Error("Invalid midi note");if(e&&(e<0||e>127))throw new Error("Invalid velocity value");if(!this.audioContext)throw new Error("Audio context not initialized");let i=this.audioContext.createBufferSource(),{closestNoteMidi:o,closestNote:r}=F(this.forteNotes,this.pianoNotes,t,e);if(r){i.buffer=r;let s=this.audioContext.createGain(),n=Math.min(127,e??127);if(s.gain.value=(n/127*.9+.1)*.5,i.connect(s),s.connect(this.compressorNode),i.playbackRate.value=2**((t-o)/12),i.start(),this.playingNotes.set(i,s),!this.sustain){let l=this.audioContext.currentTime;s.gain.cancelScheduledValues(l),s.gain.setValueAtTime(s.gain.value,l),s.gain.exponentialRampToValueAtTime(Number.EPSILON,l+8)}i.onended=()=>{i.disconnect(),this.playingNotes.delete(i)}}else throw new Error("Note not found")});a(this,"playNoteFromName",(t,e)=>{this.playNoteFromMidi(p[t],e)});this.audioContext=new AudioContext,this.compressorNode=this.audioContext.createDynamicsCompressor(),this.compressorNode.threshold.value=-24,this.compressorNode.knee.value=0,this.compressorNode.ratio.value=2,this.compressorNode.attack.value=.001,this.compressorNode.release.value=.5,this.compressorNode.connect(this.audioContext.destination)}},B=class{constructor(t){a(this,"mode");a(this,"keyMap",new Map);a(this,"offset");a(this,"getNoteMap",()=>this.keyMap);a(this,"getMidiRange",()=>{let t=Array.from(this.keyMap.values()).reduce((i,o)=>o.midiNote&&o.midiNote<i?o.midiNote:i,127),e=Array.from(this.keyMap.values()).reduce((i,o)=>o.midiNote&&o.midiNote>i?o.midiNote:i,0);return{low:t,high:e}});a(this,"getNoteRange",()=>{let t=this.getMidiRange();return{low:f[t.low],high:f[t.high]}});a(this,"shiftLeft",()=>{this.offset=Math.max(this.offset-1,0),this.keyMap=new Map,this.buildNoteMap()});a(this,"shiftLeftOctave",()=>{this.offset=Math.max(this.offset-7,0),this.keyMap=new Map,this.buildNoteMap()});a(this,"shiftRight",()=>{this.offset=Math.min(this.offset+1,this.mode==="dual"?30:41),this.keyMap=new Map,this.buildNoteMap()});a(this,"shiftRightOctave",()=>{this.offset=Math.min(this.offset+7,this.mode==="dual"?30:41),this.keyMap=new Map,this.buildNoteMap()});a(this,"buildNoteMap",()=>{this.mode==="single"?(h(this.keyMap,1,this.offset),c(this.keyMap,2,this.offset)):(h(this.keyMap,0,this.offset),c(this.keyMap,1,this.offset),h(this.keyMap,2,this.offset+12),c(this.keyMap,3,this.offset+12))});this.mode=t,t==="single"?this.offset=23:this.offset=16,this.buildNoteMap()}},h=(t,e,i)=>{m[e].forEach((o,r)=>{let s=v[i+r];if(s===null)t.set(o,{midiNote:null,type:"disabled"});else if(s!==void 0)t.set(o,{midiNote:p[s],type:"black"});else throw new Error("Invalid note")})},c=(t,e,i)=>{m[e].forEach((o,r)=>{let s=M[i+r];if(s)t.set(o,{midiNote:p[s],type:"white"});else throw new Error("Invalid note")})};const S=t=>{const e=u.useRef(null),[i,o]=u.useState(0),[r,s]=u.useState(!0),[n,l]=u.useState(!1),[g,d]=u.useState(!1),[k,N]=u.useState(!1);u.useEffect(()=>(e.current||(e.current=new G),()=>{e.current=null}),[]);const C=y=>{e.current&&(e.current.setSustain(y),N(y))};return u.useEffect(()=>{e.current&&(s(!0),e.current.loadNotes(t,o).then(()=>{s(!1),l(!0)}).catch(()=>{s(!1),d(!0)}))},[t]),{playNoteFromName:e.current?e.current.playNoteFromName:void 0,playNoteFromMidi:e.current?e.current.playNoteFromMidi:void 0,setSustain:C,sustain:k,isLoading:r,isSuccess:n,isError:g,progress:i}};export{B as A,M as c,f as d,p as n,v as p,K as s,S as u};
